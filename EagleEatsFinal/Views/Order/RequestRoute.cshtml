@model EagleEatsFinal.Data.DeliveryRoute
@using EagleEatsFinal.Data
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    ViewData["Title"] = "Request a Route";
}




<div class="titlebox">
    <h1 class="">@ViewData["Title"]</h1>
</div>
<section class="item-section">
    @{
        if (ViewData["Error"] != null)
        {
            <script>alert('@ViewData["Error"]');</script>
        }
}
</section>
<section class="form-wrapper">
    <div asp-validation-summary="All" class="form-item-validation-text"></div>
    <form id="item-form" method="post" class="form">
        <div class="starting-div">
            <h5>Start Location</h5>
            <section>
                <div class="form-item address">
                    <div class="form-item-address">
                        <label class="form-item-label">Starting Address</label>
                        <button type="button" id="startHome" class="addressbutton" title="Use my address"><span>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M224 256c70.7 0 128-57.31 128-128s-57.3-128-128-128C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3c0 19.14 15.52 34.67 34.66 34.67h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304z"/></svg>
                        </span></button>
                        <input asp-for="StartLocation" class="form-item-input" />
                        <span asp-validation-for="StartLocation" class="form-item-validation-text"></span>
                        
                    </div>
                </div>
            </section>
        </div>
        <div class="ending-div">
            <h5>End Location</h5>
            <section>
                <div class="form-item address">
                    <div class="form-item-address">
                        <label class="form-item-label">End Address</label>
                        <button type="button" id="endHome" class="addressbutton" title="Use my address"><span>
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512"><path d="M224 256c70.7 0 128-57.31 128-128s-57.3-128-128-128C153.3 0 96 57.31 96 128S153.3 256 224 256zM274.7 304H173.3C77.61 304 0 381.6 0 477.3c0 19.14 15.52 34.67 34.66 34.67h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304z"/></svg>
                        </span></button>
                        <input asp-for="EndLocation" class="form-item-input" />
                        <span asp-validation-for="EndLocation" class="form-item-validation-text"></span>
                        
                    </div>
                </div>
            </section>
        </div>
        <div>
            <h5>Request Pickup Time</h5>
            <input type="datetime-local" asp-for="RequestedPickupTime" />
            <span asp-validation-for="RequestedPickupTime" class="form-item-validation-text"></span>
        </div>
        <div>
            <h5>Request Delivery Time</h5>
            <input type="datetime-local" asp-for="RequestedDeliveryTime" />
            <span asp-validation-for="RequestedDeliveryTime" class="form-item-validation-text"></span>
        </div>
        <h5 >For Item</h5>
        <section>
            <div class="form-item" style="display: flex; flex-direction: column; align-items: center;">
                <label class="form-item-label">Item</label>
                <input asp-for="Item.Name" value="@((ViewData["Item"] as Item).Name)" class="form-item-input" readonly="readonly"/>
            </div>
            <div class="form-item" style="display: flex; flex-direction: column; align-items: center;">
                <label class="form-item-label">Description</label>
                <input asp-for="Item.Description" value="@((ViewData["Item"] as Item).Description)" class="form-item-input" readonly="readonly"/>
            </div>
            <div class="form-item" style="display: flex; flex-direction: column; align-items: center;">
                <label class="form-item-label">Note</label>
                
                <textarea asp-for="Item.Note" id="itemnotebox" class="form-item-input" readonly="readonly" style="overflow-y: scroll; resize: none; width: 100%; height: 150px;">
                </textarea>
                <script>document.getElementById('itemnotebox').innerHTML = "@((ViewData["Item"] as Item).Note)";</script>
                
            </div>
        </section>
        <a class="form-submit" onclick="formSubmit()">Submit</a>
    </form>
</section>

@{
    string address = UserManager.GetUserAsync(User).Result.Address;
}

<script>
    

        window.onbeforeunload = function () {
        return true;
    };
    
    const addAddress = (object) => {
        object.nextElementSibling.value = '@address';
    }

    const formSubmit = () => {
        window.onbeforeunload = null;
        document.getElementById('item-form').submit();
    };


</script>

